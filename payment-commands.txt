RAZORPAY PAYMENT SYSTEM - COMMAND REFERENCE
===========================================

1. SERVER SETUP & STARTUP
--------------------------
# Navigate to server directory and start
cd d:\workspace\Company\Edumaniax\server
npm start

# Stop all node processes (if needed)
Get-Process -Name "node" | Stop-Process -Force

# Restart server with proper directory navigation
Set-Location "d:\workspace\Company\Edumaniax\server"; npm start


2. CLIENT STARTUP
-----------------
# Navigate to client directory and start development server
cd d:\workspace\Company\Edumaniax\client
npm run dev

# Frontend will typically run on http://localhost:5174/


3. DATABASE OPERATIONS
----------------------
# Push schema changes to database
cd d:\workspace\Company\Edumaniax\server
npx prisma db push

# Generate Prisma client
npx prisma generate

# Reset database (if needed)
npx prisma db push --force-reset


4. PAYMENT API TESTING COMMANDS
-------------------------------

# Check payment feature status
Invoke-RestMethod -Uri "http://localhost:3000/payment/feature-status" -Method GET

# Test users endpoint (get existing users)
Invoke-RestMethod -Uri "http://localhost:3000/payment/test-users" -Method GET

# Create payment order (replace with actual user ID)
Invoke-RestMethod -Uri "http://localhost:3000/payment/create-order" -Method POST -Headers @{"Content-Type"="application/json"} -Body '{"userId":"cmd9ty0400000s60g1qzkwuuv","planType":"PRO"}'

# Check user payment history
Invoke-RestMethod -Uri "http://localhost:3000/payment/payments/cmdooj9t90000s60gqxu48m2n" -Method GET

# Check user subscriptions
Invoke-RestMethod -Uri "http://localhost:3000/payment/subscriptions/cmdooj9t90000s60gqxu48m2n" -Method GET

# Check if user has active subscription for a plan
Invoke-RestMethod -Uri "http://localhost:3000/payment/check-subscription/cmdooj9t90000s60gqxu48m2n/PRO" -Method GET

# Cleanup test payments (delete PENDING payments)
Invoke-RestMethod -Uri "http://localhost:3000/payment/cleanup-test-payments/cmdooj9t90000s60gqxu48m2n" -Method DELETE

# Delete completed payments for a user (add this endpoint to paymentRoutes.js)
Invoke-RestMethod -Uri "http://localhost:3000/payment/delete-completed-payments/cmdooj9t90000s60gqxu48m2n" -Method DELETE

# Delete all payments for a user (add this endpoint to paymentRoutes.js)
Invoke-RestMethod -Uri "http://localhost:3000/payment/delete-all-payments/cmdooj9t90000s60gqxu48m2n" -Method DELETE

# Delete all payments and subscriptions for a user (complete cleanup)
# Delete all payments and subscriptions for a user (complete cleanup)
Invoke-RestMethod -Uri "http://localhost:3000/payment/delete-all-user-data/cmdooj9t90000s60gqxu48m2n" -Method DELETE
# Bash equivalent:
curl -X DELETE "http://localhost:3000/payment/delete-all-user-data/cmdooj9t90000s60gqxu48m2n"

# Verify payment (example - requires actual Razorpay response data)
Invoke-RestMethod -Uri "http://localhost:3000/payment/verify-payment" -Method POST -Headers @{"Content-Type"="application/json"} -Body '{"razorpay_order_id":"order_xyz","razorpay_payment_id":"pay_xyz","razorpay_signature":"signature_xyz","userId":"user_id"}'

# Health check endpoint
Invoke-RestMethod -Uri "http://localhost:3000/api/health" -Method GET

# Quick test sequence for payment system
# 1. Check health
Invoke-RestMethod -Uri "http://localhost:3000/api/health" -Method GET

# 2. Check feature status
Invoke-RestMethod -Uri "http://localhost:3000/payment/feature-status" -Method GET

# 3. Create test order
Invoke-RestMethod -Uri "http://localhost:3000/payment/create-order" -Method POST -Headers @{"Content-Type"="application/json"} -Body '{"userId":"cmdooj9t90000s60gqxu48m2n","planType":"SOLO","selectedModule":"Finance"}'

# 4. Clean up test data
Invoke-RestMethod -Uri "http://localhost:3000/payment/cleanup-test-payments/cmdooj9t90000s60gqxu48m2n" -Method DELETE



5. ENVIRONMENT CONFIGURATION
-----------------------------
# Server environment variables (.env file location: d:\workspace\Company\Edumaniax\server\.env)
DATABASE_URL="postgresql://postgres:user1234@34.100.160.29:5432/postgres?schema=public&connection_limit=3&pool_timeout=20&connect_timeout=30"
PAYMENT_ENABLED=true
RAZORPAY_KEY_ID=rzp_test_5eCI2O6pKy76UK
RAZORPAY_SECRET_KEY=8G9exxEoj2arjqvEwYFmiJ05
PORT=3000

# Client environment variables (.env file location: d:\workspace\Company\Edumaniax\client\.env)
VITE_API_URL=http://localhost:3000
NEXT_PUBLIC_RAZORPAY_KEY=rzp_test_5eCI2O6pKy76UK
PAYMENT_ENABLED=true


6. PLAN CONFIGURATIONS
-----------------------
STARTER Plan: ₹0 (Free) - 7 days trial duration
SOLO Plan: ₹199 (19900 paise) - 3 months duration - Includes certificates
PRO Plan: ₹1433 (143300 paise) - 6 months duration - Includes certificates for all modules
INSTITUTIONAL Plan: Custom pricing - Contact required - Includes certificates


7. RAZORPAY TEST CARD DETAILS
------------------------------
# Primary Indian Test Cards (Recommended)
Card Number: 5267 3181 8797 5449 (Mastercard - Indian)
Card Number: 4895 0420 9876 5432 (Visa - Indian)


# UPI Testing
UPI ID: success@razorpay (for successful payments)
UPI ID: failure@razorpay (for failed payments)


{
"id": "cmdooj9t90000s60gqxu48m2n",
"name": "Gaurav Kumar",
"email": "gaurav.12bhindwar@gmail.com",
"phonenumber": "9006045930"
},


 {
    "id": "cme2njlhm00057c40l5hip51k",
    "userId": "cmdooj9t90000s60gqxu48m2n",
    "subscriptionId": "cme2nlz9r00077c404or1nsl0",
    "razorpayOrderId": "order_R2naMj45hDKje5",
    "razorpayPaymentId": "pay_R2nbyMYKL0WeEF",
    "amount": 1433,
    "currency": "INR",
    "status": "COMPLETED",
    "planType": "PRO",
    "createdAt": "2025-08-08T09:57:20.651Z",
    "updatedAt": "2025-08-08T09:59:14.370Z",
    "subscription": {
      "id": "cme2nlz9r00077c404or1nsl0",
      "userId": "cmdooj9t90000s60gqxu48m2n",
      "planType": "PRO",
      "status": "ACTIVE",
      "startDate": "2025-08-08T09:59:11.824Z",
      "endDate": "2025-11-06T09:59:11.822Z",
      "amount": 1433,
      "createdAt": "2025-08-08T09:59:11.824Z",
      "updatedAt": "2025-08-08T09:59:11.824Z"
    }
  },
  {
    "id": "cme2ngfsh00017c406u5hmuaq",
    "userId": "cmdooj9t90000s60gqxu48m2n",
    "subscriptionId": "cme14rov900037ct0stuxulyy",
    "razorpayOrderId": "order_R2nXlfppChy1bG",
    "razorpayPaymentId": "pay_R2nZC4E3yc0cFw",
    "amount": 199,
    "currency": "INR",
    "status": "COMPLETED",
    "planType": "SOLO",
    "createdAt": "2025-08-08T09:54:53.160Z",
    "updatedAt": "2025-08-08T09:56:28.251Z",
    "subscription": {
      "id": "cme14rov900037ct0stuxulyy",
      "userId": "cmdooj9t90000s60gqxu48m2n",
      "planType": "SOLO",
      "status": "ACTIVE",
      "startDate": "2025-08-07T08:23:59.397Z",
      "endDate": "2025-11-06T09:56:28.098Z",
      "amount": 199,
      "createdAt": "2025-08-07T08:23:59.397Z",
      "updatedAt": "2025-08-08T09:56:28.100Z"
    }
  },